; Template for Installer Jukebox configuration file
;
; Rename or copy this to InstallerJukebox.ini in the same directory that
; contains the InstallerJukebox executable and adjust settings. It will not work
; out of the box!
;
; Every section execept [General] and [installer_NSIS] represents a package. For
; each package, the "Output file" option must be configured to a full path and
; filename, including extension (.exe). Everything else is optional. To disable
; a package, delete or comment out its entire section.
;
; IMPORTANT NOTE FOR WINDOWS USERS:
; Don't use single backslashes for path names (like D:\temp). Write either
; D:\\temp or D:/temp.


[General]
; REQUIRED: Working directory for temporary files. Since files are not created
; in a safe way for global temporary directories, it is recommended to use a
; dedicated directory for this task only.
Working directory =
; Default installer type. Only NSIS is supported by now.
Installer = NSIS
; When to keep temporary files after building a package: Defaults to "never"
; which is the best choice for most people. The other options are mostly useful
; for development and testing to prevent downloading stuff over and over again.
; "onError" only keeps files if an error occurs during package creation, and
; "always" keeps files unconditionally.
Keep temp files = never

; NSIS specific options
[installer_NSIS]
; By default, makensis is invoked as "makensis", which requires makensis in the
; system search path. If that does not work in your environment or your
; environment can't be trusted, specify a full path here (like /usr/bin/makensis)
makensis =
; Some GNU/Linux distributions ship NSIS packages with a System plugin that does
; not support the "call" function. If makensis fails with a message "Invalid
; command: System::Call":
; 1. Determine your NSIS version (for example, by invoking makensis without
;    arguments)
; 2. Go to http://sourceforge.net/projects/nsis/files/NSIS%202/ and download the
;    same NSIS version as a ZIP archive (nsis-<Version>.zip)
; 3. Extract the file Plugins/System.dll from the ZIP archive to an arbitrary
;    location.
; 4. Either replace the default System.dll with the version you just downloaded,
;    or specify its location (full path and filename) here:
System plugin =

[Flash Player ActiveX]
Output file =

[Flash Player Plugin]
Output file =
